'use client';

import React, { useState, useEffect } from 'react';
import UniversalCalculatorBuilder from '@/components/calculator/UniversalCalculatorBuilder';
import CalculatorRuntime from '@/components/calculator/CalculatorRuntime';
import { Calculator, Zap, Rocket, Star, ArrowRight, Play, Code, Eye } from 'lucide-react';

// –ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã—Ö –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤
const EXAMPLE_CALCULATORS = [
  {
    id: 'mortgage',
    name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏–ø–æ—Ç–µ–∫–∏',
    description: '–†–∞—Å—á–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –∏–ø–æ—Ç–µ—á–Ω–æ–º—É –∫—Ä–µ–¥–∏—Ç—É',
    category: '–§–∏–Ω–∞–Ω—Å—ã',
    icon: 'üè†',
    config: {
      id: 'mortgage_calc',
      name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏–ø–æ—Ç–µ–∫–∏',
      description: '–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ –∏–ø–æ—Ç–µ—á–Ω–æ–º—É –∫—Ä–µ–¥–∏—Ç—É',
      elements: [
        {
          id: 'loan_amount',
          type: 'input',
          name: '–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞',
          label: '–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ (‚ÇΩ)',
          position: { x: 20, y: 20 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: { inputType: 'number', placeholder: '3000000', required: true, min: 100000 }
        },
        {
          id: 'interest_rate',
          type: 'slider',
          name: '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞',
          label: '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (%)',
          position: { x: 20, y: 80 },
          size: { width: 300, height: 60 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: { min: 1, max: 30, step: 0.1 }
        },
        {
          id: 'loan_term',
          type: 'select',
          name: '–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞',
          label: '–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞',
          position: { x: 20, y: 160 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: {
            options: [
              { value: 5, label: '5 –ª–µ—Ç' },
              { value: 10, label: '10 –ª–µ—Ç' },
              { value: 15, label: '15 –ª–µ—Ç' },
              { value: 20, label: '20 –ª–µ—Ç' },
              { value: 25, label: '25 –ª–µ—Ç' },
              { value: 30, label: '30 –ª–µ—Ç' }
            ]
          }
        },
        {
          id: 'monthly_payment',
          type: 'output',
          name: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂',
          label: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂ (‚ÇΩ)',
          position: { x: 20, y: 220 },
          size: { width: 300, height: 60 },
          styles: { backgroundColor: '#f0f9ff', textColor: '#1e40af', borderRadius: 4, fontSize: 16, padding: 12 },
          config: { formula: 'pmt(interest_rate/100/12, loan_term*12, loan_amount)' }
        }
      ],
      variables: [
        { id: 'loan_amount', name: '–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞', type: 'number', defaultValue: 3000000 },
        { id: 'interest_rate', name: '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞', type: 'number', defaultValue: 8.5 },
        { id: 'loan_term', name: '–°—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞', type: 'number', defaultValue: 20 }
      ],
      formulas: [
        {
          id: 'monthly_payment',
          name: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç–µ–∂',
          expression: 'pmt(interest_rate/100/12, loan_term*12, loan_amount)'
        }
      ]
    }
  },
  {
    id: 'doors_price',
    name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–≤–µ—Ä–µ–π',
    description: '–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ–ø—Ü–∏–π',
    category: '–¢–æ–≤–∞—Ä—ã',
    icon: 'üö™',
    config: {
      id: 'doors_calc',
      name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–≤–µ—Ä–µ–π',
      description: '–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã—Ö –¥–≤–µ—Ä–µ–π',
      elements: [
        {
          id: 'door_type',
          type: 'select',
          name: '–¢–∏–ø –¥–≤–µ—Ä–∏',
          label: '–¢–∏–ø –¥–≤–µ—Ä–∏',
          position: { x: 20, y: 20 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: {
            options: [
              { value: 15000, label: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –¥–≤–µ—Ä—å - 15,000‚ÇΩ' },
              { value: 25000, label: '–ü—Ä–µ–º–∏—É–º –¥–≤–µ—Ä—å - 25,000‚ÇΩ' },
              { value: 35000, label: '–õ—é–∫—Å –¥–≤–µ—Ä—å - 35,000‚ÇΩ' }
            ]
          }
        },
        {
          id: 'quantity',
          type: 'input',
          name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
          label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–µ—Ä–µ–π',
          position: { x: 20, y: 80 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: { inputType: 'number', placeholder: '1', min: 1, defaultValue: 1 }
        },
        {
          id: 'installation',
          type: 'checkbox',
          name: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞',
          label: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ (+3,000‚ÇΩ –∑–∞ –¥–≤–µ—Ä—å)',
          position: { x: 20, y: 140 },
          size: { width: 300, height: 30 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', fontSize: 14 },
          config: {}
        },
        {
          id: 'delivery',
          type: 'checkbox',
          name: '–î–æ—Å—Ç–∞–≤–∫–∞',
          label: '–î–æ—Å—Ç–∞–≤–∫–∞ (+1,500‚ÇΩ)',
          position: { x: 20, y: 180 },
          size: { width: 300, height: 30 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', fontSize: 14 },
          config: {}
        },
        {
          id: 'total_price',
          type: 'output',
          name: '–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å',
          label: '–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å (‚ÇΩ)',
          position: { x: 20, y: 230 },
          size: { width: 300, height: 60 },
          styles: { backgroundColor: '#f0fdf4', textColor: '#166534', borderRadius: 4, fontSize: 18, padding: 12 },
          config: { formula: 'door_type * quantity + if(installation, 3000 * quantity, 0) + if(delivery, 1500, 0)' }
        }
      ],
      variables: [
        { id: 'door_type', name: '–¢–∏–ø –¥–≤–µ—Ä–∏', type: 'number', defaultValue: 15000 },
        { id: 'quantity', name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', type: 'number', defaultValue: 1 },
        { id: 'installation', name: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞', type: 'boolean', defaultValue: false },
        { id: 'delivery', name: '–î–æ—Å—Ç–∞–≤–∫–∞', type: 'boolean', defaultValue: false }
      ],
      formulas: [
        {
          id: 'total_price',
          name: '–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å',
          expression: 'door_type * quantity + if(installation, 3000 * quantity, 0) + if(delivery, 1500, 0)'
        }
      ]
    }
  },
  {
    id: 'bmi',
    name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢',
    description: '–†–∞—Å—á–µ—Ç –∏–Ω–¥–µ–∫—Å–∞ –º–∞—Å—Å—ã —Ç–µ–ª–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
    category: '–ó–¥–æ—Ä–æ–≤—å–µ',
    icon: '‚öñÔ∏è',
    config: {
      id: 'bmi_calc',
      name: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ò–ú–¢',
      description: '–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ –≤–∞—à –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞',
      elements: [
        {
          id: 'weight',
          type: 'input',
          name: '–í–µ—Å',
          label: '–í–µ—Å (–∫–≥)',
          position: { x: 20, y: 20 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: { inputType: 'number', placeholder: '70', min: 20, max: 300 }
        },
        {
          id: 'height',
          type: 'input',
          name: '–†–æ—Å—Ç',
          label: '–†–æ—Å—Ç (—Å–º)',
          position: { x: 20, y: 80 },
          size: { width: 300, height: 40 },
          styles: { backgroundColor: '#ffffff', textColor: '#000000', borderRadius: 4, fontSize: 14, padding: 8 },
          config: { inputType: 'number', placeholder: '175', min: 100, max: 250 }
        },
        {
          id: 'bmi_result',
          type: 'output',
          name: '–ò–ú–¢',
          label: '–ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞',
          position: { x: 20, y: 140 },
          size: { width: 300, height: 60 },
          styles: { backgroundColor: '#fef3c7', textColor: '#92400e', borderRadius: 4, fontSize: 16, padding: 12 },
          config: { formula: 'round(weight / power(height/100, 2), 1)' }
        }
      ],
      variables: [
        { id: 'weight', name: '–í–µ—Å', type: 'number', defaultValue: 70 },
        { id: 'height', name: '–†–æ—Å—Ç', type: 'number', defaultValue: 175 }
      ],
      formulas: [
        {
          id: 'bmi_result',
          name: '–ò–ú–¢',
          expression: 'round(weight / power(height/100, 2), 1)'
        }
      ]
    }
  }
];

export default function CalculatorBuilderPage() {
  const [mode, setMode] = useState<'examples' | 'builder' | 'runtime'>('examples');
  const [selectedExample, setSelectedExample] = useState<any>(null);
  const [builderConfig, setBuilderConfig] = useState<any>(null);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* üé® –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="p-3 bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl">
                <Calculator className="w-8 h-8 text-white" />
              </div>
              <div>
                <h1 className="text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤
                </h1>
                <p className="text-gray-600 mt-1">
                  –°–æ–∑–¥–∞–π—Ç–µ –ª—é–±–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
                </p>
              </div>
            </div>

            {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
            <div className="flex bg-gray-100 rounded-lg p-1">
              <button
                onClick={() => setMode('examples')}
                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${
                  mode === 'examples' 
                    ? 'bg-white text-gray-900 shadow-sm' 
                    : 'text-gray-600 hover:text-gray-900'
                }`}
              >
                <Star className="w-4 h-4 inline mr-2" />
                –ü—Ä–∏–º–µ—Ä—ã
              </button>
              <button
                onClick={() => setMode('builder')}
                className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${
                  mode === 'builder' 
                    ? 'bg-white text-gray-900 shadow-sm' 
                    : 'text-gray-600 hover:text-gray-900'
                }`}
              >
                <Code className="w-4 h-4 inline mr-2" />
                –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
              </button>
              {selectedExample && (
                <button
                  onClick={() => setMode('runtime')}
                  className={`px-4 py-2 rounded-md text-sm font-medium transition-all ${
                    mode === 'runtime' 
                      ? 'bg-white text-gray-900 shadow-sm' 
                      : 'text-gray-600 hover:text-gray-900'
                  }`}
                >
                  <Play className="w-4 h-4 inline mr-2" />
                  –¢–µ—Å—Ç
                </button>
              )}
            </div>
          </div>
        </div>
      </header>

      {/* üì± –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {mode === 'examples' && (
          <div>
            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            <div className="text-center mb-12">
              <h2 className="text-4xl font-bold text-gray-900 mb-4">
                –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã –¥–ª—è –ª—é–±—ã—Ö –∑–∞–¥–∞—á
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto">
                –û—Ç –ø—Ä–æ—Å—Ç—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–æ —Å–ª–æ–∂–Ω—ã—Ö –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª. 
                –í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –º–æ—â–Ω—ã–π –¥–≤–∏–∂–æ–∫ —Ñ–æ—Ä–º—É–ª, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤.
              </p>
            </div>

            {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16">
              <div className="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
                <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Zap className="w-8 h-8 text-blue-600" />
                </div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–ë–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
                <p className="text-gray-600">–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä—ã —Å –ø–æ–º–æ—â—å—é –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</p>
              </div>
              
              <div className="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
                <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Calculator className="w-8 h-8 text-purple-600" />
                </div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–ú–æ—â–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã</h3>
                <p className="text-gray-600">60+ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, —É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞, –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</p>
              </div>
              
              <div className="text-center p-6 bg-white rounded-xl shadow-sm border border-gray-100">
                <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Rocket className="w-8 h-8 text-green-600" />
                </div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</h3>
                <p className="text-gray-600">–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–∞—Ç–∞–ª–æ–≥—É —Ç–æ–≤–∞—Ä–æ–≤, –≤–Ω–µ—à–Ω–∏–º API –∏ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö</p>
              </div>
            </div>

            {/* –ü—Ä–∏–º–µ—Ä—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤ */}
            <div>
              <h3 className="text-2xl font-bold text-gray-900 mb-8 text-center">
                –ì–æ—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–≤
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {EXAMPLE_CALCULATORS.map((example) => (
                  <div 
                    key={example.id}
                    className="bg-white rounded-xl shadow-sm border border-gray-100 p-6 hover:shadow-md transition-all cursor-pointer group"
                    onClick={() => {
                      setSelectedExample(example);
                      setMode('runtime');
                    }}
                  >
                    <div className="flex items-center mb-4">
                      <div className="text-3xl mr-3">{example.icon}</div>
                      <div>
                        <h4 className="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                          {example.name}
                        </h4>
                        <span className="text-xs text-blue-600 bg-blue-100 px-2 py-1 rounded-full">
                          {example.category}
                        </span>
                      </div>
                    </div>
                    
                    <p className="text-gray-600 text-sm mb-4">
                      {example.description}
                    </p>
                    
                    <div className="flex items-center justify-between">
                      <button 
                        onClick={(e) => {
                          e.stopPropagation();
                          setSelectedExample(example);
                          setMode('runtime');
                        }}
                        className="text-blue-600 hover:text-blue-700 text-sm font-medium flex items-center"
                      >
                        <Play className="w-4 h-4 mr-1" />
                        –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å
                      </button>
                      
                      <button 
                        onClick={(e) => {
                          e.stopPropagation();
                          setBuilderConfig(example.config);
                          setMode('builder');
                        }}
                        className="text-gray-600 hover:text-gray-700 text-sm font-medium flex items-center"
                      >
                        <Eye className="w-4 h-4 mr-1" />
                        –ò–∑—É—á–∏—Ç—å
                      </button>
                    </div>
                  </div>
                ))}
              </div>

              {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
              <div className="text-center mt-12">
                <button
                  onClick={() => setMode('builder')}
                  className="inline-flex items-center px-8 py-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 transition-all shadow-lg hover:shadow-xl"
                >
                  <Calculator className="w-5 h-5 mr-2" />
                  –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
                  <ArrowRight className="w-5 h-5 ml-2" />
                </button>
              </div>
            </div>
          </div>
        )}

        {mode === 'builder' && (
          <div className="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
            <UniversalCalculatorBuilder />
          </div>
        )}

        {mode === 'runtime' && selectedExample && (
          <div className="max-w-2xl mx-auto">
            <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-8">
              <div className="flex items-center mb-6">
                <div className="text-4xl mr-4">{selectedExample.icon}</div>
                <div>
                  <h2 className="text-2xl font-bold text-gray-900">
                    {selectedExample.name}
                  </h2>
                  <p className="text-gray-600">
                    {selectedExample.description}
                  </p>
                </div>
              </div>
              
              <CalculatorRuntime 
                config={selectedExample.config}
                onResult={(results) => console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:', results)}
              />
              
              <div className="mt-8 pt-6 border-t border-gray-200">
                <div className="flex items-center justify-between">
                  <button
                    onClick={() => setMode('examples')}
                    className="text-gray-600 hover:text-gray-900 font-medium"
                  >
                    ‚Üê –ù–∞–∑–∞–¥ –∫ –ø—Ä–∏–º–µ—Ä–∞–º
                  </button>
                  
                  <button
                    onClick={() => {
                      setBuilderConfig(selectedExample.config);
                      setMode('builder');
                    }}
                    className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
