'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { NoCodeComponentRenderer, componentRegistry } from '../../components/nocode/NoCodeComponents';

// ===================== –¢–∏–ø—ã –¥–ª—è No-Code —Å–∏—Å—Ç–µ–º—ã =====================

interface PageTemplate {
  id: string;
  name: string;
  description: string;
  category: string;
  layout: PageLayout;
  components: ComponentConfig[];
}

interface PageLayout {
  type: 'grid' | 'flex' | 'custom';
  columns: number;
  gap: number;
  responsive: boolean;
}

interface ComponentConfig {
  id: string;
  type: 'style-selector' | 'model-selector' | 'parameters-form' | 'preview-panel' | 'cart-panel' | 'custom';
  position: { row: number; col: number; span?: number };
  config: any;
  title?: string;
  visible: boolean;
}

interface CategoryConfig {
  id: string;
  name: string;
  description: string;
  icon: string;
  properties: PropertyConfig[];
  subcategories: SubcategoryConfig[];
  templates: PageTemplate[];
}

interface PropertyConfig {
  key: string;
  name: string;
  type: 'select' | 'text' | 'number' | 'boolean' | 'multiselect';
  required: boolean;
  options?: string[];
  validation?: any;
}

interface SubcategoryConfig {
  id: string;
  name: string;
  description: string;
  properties: PropertyConfig[];
}

// ===================== –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã =====================

const defaultTemplates: PageTemplate[] = [
  {
    id: 'doors-template',
    name: '–®–∞–±–ª–æ–Ω –¥–ª—è –¥–≤–µ—Ä–µ–π',
    description: '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –¥–≤–µ—Ä–µ–π —Å –≤—ã–±–æ—Ä–æ–º —Å—Ç–∏–ª—è, –º–æ–¥–µ–ª–∏, –ø–æ–∫—Ä—ã—Ç–∏—è –∏ —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã',
    category: 'doors',
    layout: { type: 'grid', columns: 3, gap: 8, responsive: true },
    components: [
      {
        id: 'style-selector',
        type: 'style-selector',
        position: { row: 1, col: 1, span: 1 },
        config: {
          title: '–ü–æ–ª–æ—Ç–Ω–æ',
          options: ['–°–∫—Ä—ã—Ç–∞—è', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è', '–ù–µ–æ–∫–ª–∞—Å—Å–∏–∫–∞', '–ö–ª–∞—Å—Å–∏–∫–∞']
        },
        title: '–í—ã–±–æ—Ä —Å—Ç–∏–ª—è',
        visible: true
      },
      {
        id: 'model-selector',
        type: 'model-selector',
        position: { row: 2, col: 1, span: 1 },
        config: {
          title: '–ú–æ–¥–µ–ª–∏',
          models: [
            { id: 'pg-base-1', name: 'PG Base 1', description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–≤–µ—Ä—å' },
            { id: 'po-base-1-1', name: 'PO Base 1/1', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –¥–≤–µ—Ä—å' },
            { id: 'neo-1', name: 'Neo-1', description: '–ù–µ–æ–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –¥–≤–µ—Ä—å' }
          ]
        },
        title: '–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏',
        visible: true
      },
      {
        id: 'parameters-form',
        type: 'parameters-form',
        position: { row: 3, col: 1, span: 1 },
        config: {
          fields: [
            { key: 'finish', label: '–ü–æ–∫—Ä—ã—Ç–∏–µ', type: 'select', options: ['–õ–∞–º–∏–Ω–∞—Ç', '–ü–í–•', '–®–ø–æ–Ω'] },
            { key: 'color', label: '–¶–≤–µ—Ç', type: 'select', options: ['–ë–µ–ª—ã–π', '–î—É–±', '–û—Ä–µ—Ö'] },
            { key: 'width', label: '–®–∏—Ä–∏–Ω–∞', type: 'number', min: 600, max: 1000 },
            { key: 'height', label: '–í—ã—Å–æ—Ç–∞', type: 'number', min: 1900, max: 2200 }
          ]
        },
        title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã',
        visible: true
      },
      {
        id: 'preview-panel',
        type: 'preview-panel',
        position: { row: 1, col: 2, span: 2 },
        config: {
          showImage: true,
          showPrice: true,
          showSpecs: true
        },
        title: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä',
        visible: true
      },
      {
        id: 'cart-panel',
        type: 'cart-panel',
        position: { row: 3, col: 2, span: 2 },
        config: {
          showTotal: true,
          allowEdit: true,
          exportOptions: ['kp', 'invoice', 'factory-csv', 'factory-xlsx']
        },
        title: '–ö–æ—Ä–∑–∏–Ω–∞',
        visible: true
      }
    ]
  },
  {
    id: 'flooring-template',
    name: '–®–∞–±–ª–æ–Ω –¥–ª—è –Ω–∞–ø–æ–ª—å–Ω—ã—Ö –ø–æ–∫—Ä—ã—Ç–∏–π',
    description: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–∞–º–∏–Ω–∞—Ç–∞, –ø–∞—Ä–∫–µ—Ç–∞, –ª–∏–Ω–æ–ª–µ—É–º–∞',
    category: 'flooring',
    layout: { type: 'grid', columns: 2, gap: 6, responsive: true },
    components: [
      {
        id: 'material-selector',
        type: 'style-selector',
        position: { row: 1, col: 1, span: 1 },
        config: {
          title: '–ú–∞—Ç–µ—Ä–∏–∞–ª',
          options: ['–õ–∞–º–∏–Ω–∞—Ç', '–ü–∞—Ä–∫–µ—Ç', '–õ–∏–Ω–æ–ª–µ—É–º', '–ü–ª–∏—Ç–∫–∞']
        },
        title: '–í—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
        visible: true
      },
      {
        id: 'collection-selector',
        type: 'model-selector',
        position: { row: 2, col: 1, span: 1 },
        config: {
          title: '–ö–æ–ª–ª–µ–∫—Ü–∏—è',
          models: [
            { id: 'laminate-premium', name: '–õ–∞–º–∏–Ω–∞—Ç Premium', description: '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ª–∞–º–∏–Ω–∞—Ç' },
            { id: 'parquet-oak', name: '–ü–∞—Ä–∫–µ—Ç –î—É–±', description: '–ú–∞—Å—Å–∏–≤ –¥—É–±–∞' }
          ]
        },
        title: '–í—ã–±–æ—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        visible: true
      },
      {
        id: 'parameters-form',
        type: 'parameters-form',
        position: { row: 3, col: 1, span: 1 },
        config: {
          fields: [
            { key: 'color', label: '–¶–≤–µ—Ç', type: 'select', options: ['–î—É–±', '–û—Ä–µ—Ö', '–Ø—Å–µ–Ω—å'] },
            { key: 'pattern', label: '–†–∏—Å—É–Ω–æ–∫', type: 'select', options: ['–û–¥–Ω–æ–ø–æ–ª–æ—Å–Ω—ã–π', '–¢—Ä–µ—Ö–ø–æ–ª–æ—Å–Ω—ã–π'] },
            { key: 'width', label: '–®–∏—Ä–∏–Ω–∞', type: 'number', min: 100, max: 300 },
            { key: 'length', label: '–î–ª–∏–Ω–∞', type: 'number', min: 1000, max: 2000 },
            { key: 'thickness', label: '–¢–æ–ª—â–∏–Ω–∞', type: 'select', options: ['8 –º–º', '10 –º–º', '12 –º–º'] }
          ]
        },
        title: '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã',
        visible: true
      },
      {
        id: 'preview-panel',
        type: 'preview-panel',
        position: { row: 1, col: 2, span: 1 },
        config: {
          showImage: true,
          showPrice: true,
          showSpecs: true
        },
        title: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä',
        visible: true
      },
      {
        id: 'cart-panel',
        type: 'cart-panel',
        position: { row: 2, col: 2, span: 1 },
        config: {
          showTotal: true,
          allowEdit: true,
          exportOptions: ['kp', 'invoice']
        },
        title: '–ö–æ—Ä–∑–∏–Ω–∞',
        visible: true
      }
    ]
  },
  {
    id: 'smart-template',
    name: '–®–∞–±–ª–æ–Ω –¥–ª—è —É–º–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
    description: '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ domeosmart.ru',
    category: 'smart',
    layout: { type: 'grid', columns: 2, gap: 6, responsive: true },
    components: [
      {
        id: 'category-selector',
        type: 'style-selector',
        position: { row: 1, col: 1, span: 1 },
        config: {
          title: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
          options: ['–£–º–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ', '–£–º–Ω—ã–µ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏', '–î–∞—Ç—á–∏–∫–∏', '–£–º–Ω—ã–µ —Ä–æ–∑–µ—Ç–∫–∏']
        },
        title: '–í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
        visible: true
      },
      {
        id: 'product-selector',
        type: 'model-selector',
        position: { row: 2, col: 1, span: 1 },
        config: {
          title: '–¢–æ–≤–∞—Ä—ã',
          models: [
            { id: 'smart-bulb-1', name: '–£–º–Ω–∞—è –ª–∞–º–ø–∞ RGB', description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' },
            { id: 'smart-switch-1', name: '–£–º–Ω—ã–π –≤—ã–∫–ª—é—á–∞—Ç–µ–ª—å', description: 'Wi-Fi —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' }
          ]
        },
        title: '–í—ã–±–æ—Ä —Ç–æ–≤–∞—Ä–∞',
        visible: true
      },
      {
        id: 'preview-panel',
        type: 'preview-panel',
        position: { row: 1, col: 2, span: 1 },
        config: {
          showImage: true,
          showPrice: true,
          showSpecs: true
        },
        title: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä',
        visible: true
      },
      {
        id: 'cart-panel',
        type: 'cart-panel',
        position: { row: 2, col: 2, span: 1 },
        config: {
          showTotal: true,
          allowEdit: true,
          exportOptions: ['kp', 'invoice']
        },
        title: '–ö–æ—Ä–∑–∏–Ω–∞',
        visible: true
      }
    ]
  }
];

const categoryConfigs: CategoryConfig[] = [
  {
    id: 'doors',
    name: '–î–≤–µ—Ä–∏',
    description: '–ú–µ–∂–∫–æ–º–Ω–∞—Ç–Ω—ã–µ –∏ –≤—Ö–æ–¥–Ω—ã–µ –¥–≤–µ—Ä–∏',
    icon: 'üö™',
    properties: [
      { key: 'style', name: '–°—Ç–∏–ª—å', type: 'select', required: true, options: ['–°–∫—Ä—ã—Ç–∞—è', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è', '–ù–µ–æ–∫–ª–∞—Å—Å–∏–∫–∞', '–ö–ª–∞—Å—Å–∏–∫–∞'] },
      { key: 'model', name: '–ú–æ–¥–µ–ª—å', type: 'select', required: true },
      { key: 'finish', name: '–ü–æ–∫—Ä—ã—Ç–∏–µ', type: 'select', required: true },
      { key: 'color', name: '–¶–≤–µ—Ç', type: 'select', required: true },
      { key: 'width', name: '–®–∏—Ä–∏–Ω–∞', type: 'number', required: true },
      { key: 'height', name: '–í—ã—Å–æ—Ç–∞', type: 'number', required: true }
    ],
    subcategories: [],
    templates: [defaultTemplates[0]]
  },
  {
    id: 'flooring',
    name: '–ù–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è',
    description: '–õ–∞–º–∏–Ω–∞—Ç, –ø–∞—Ä–∫–µ—Ç, –ª–∏–Ω–æ–ª–µ—É–º',
    icon: 'üè†',
    properties: [
      { key: 'material', name: '–ú–∞—Ç–µ—Ä–∏–∞–ª', type: 'select', required: true, options: ['–õ–∞–º–∏–Ω–∞—Ç', '–ü–∞—Ä–∫–µ—Ç', '–õ–∏–Ω–æ–ª–µ—É–º', '–ü–ª–∏—Ç–∫–∞'] },
      { key: 'collection', name: '–ö–æ–ª–ª–µ–∫—Ü–∏—è', type: 'select', required: true },
      { key: 'color', name: '–¶–≤–µ—Ç', type: 'select', required: true },
      { key: 'pattern', name: '–†–∏—Å—É–Ω–æ–∫', type: 'select', required: true },
      { key: 'width', name: '–®–∏—Ä–∏–Ω–∞', type: 'number', required: true },
      { key: 'length', name: '–î–ª–∏–Ω–∞', type: 'number', required: true },
      { key: 'thickness', name: '–¢–æ–ª—â–∏–Ω–∞', type: 'select', required: true }
    ],
    subcategories: [],
    templates: [defaultTemplates[1]]
  },
  {
    id: 'smart',
    name: '–°–º–∞—Ä—Ç',
    description: '–¢–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ domeosmart.ru',
    icon: 'üè†',
    properties: [
      { key: 'category', name: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è', type: 'select', required: true, options: ['–£–º–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ', '–£–º–Ω—ã–µ –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏', '–î–∞—Ç—á–∏–∫–∏', '–£–º–Ω—ã–µ —Ä–æ–∑–µ—Ç–∫–∏'] },
      { key: 'product', name: '–¢–æ–≤–∞—Ä', type: 'select', required: true },
      { key: 'quantity', name: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', type: 'number', required: true }
    ],
    subcategories: [],
    templates: [defaultTemplates[2]]
  }
];

// ===================== –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç No-Code —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ =====================

export default function NoCodePageBuilder() {
  const [selectedCategory, setSelectedCategory] = useState<string>('doors');
  const [selectedTemplate, setSelectedTemplate] = useState<string>('doors-template');
  const [isEditing, setIsEditing] = useState(false);
  const [customLayout, setCustomLayout] = useState<PageLayout | null>(null);
  const [customComponents, setCustomComponents] = useState<ComponentConfig[]>([]);
  const [componentData, setComponentData] = useState<Record<string, any>>({});

  const currentCategory = categoryConfigs.find(c => c.id === selectedCategory);
  const currentTemplate = defaultTemplates.find(t => t.id === selectedTemplate);

  const handleCategoryChange = (categoryId: string) => {
    setSelectedCategory(categoryId);
    const category = categoryConfigs.find(c => c.id === categoryId);
    if (category && category.templates.length > 0) {
      setSelectedTemplate(category.templates[0].id);
    }
  };

  const handleTemplateChange = (templateId: string) => {
    setSelectedTemplate(templateId);
    const template = defaultTemplates.find(t => t.id === templateId);
    if (template) {
      setCustomLayout(template.layout);
      setCustomComponents(template.components);
    }
  };

  const handleComponentUpdate = (id: string, data: any) => {
    setComponentData(prev => ({ ...prev, [id]: data }));
  };

  const toggleEditMode = () => {
    setIsEditing(!isEditing);
    if (!isEditing) {
      const template = defaultTemplates.find(t => t.id === selectedTemplate);
      if (template) {
        setCustomLayout(template.layout);
        setCustomComponents(template.components);
      }
    }
  };

  const saveTemplate = () => {
    console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞:', {
      category: selectedCategory,
      layout: customLayout,
      components: customComponents,
      data: componentData
    });
    setIsEditing(false);
  };

  const layout = customLayout || currentTemplate?.layout || { type: 'grid', columns: 3, gap: 8, responsive: true };
  const components = customComponents.length > 0 ? customComponents : currentTemplate?.components || [];

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-3">
              <Link href="/" className="text-2xl font-bold text-black">
                Domeo
              </Link>
              <span className="text-black text-lg font-bold">‚Ä¢</span>
              <span className="text-lg font-semibold text-black">No-Code –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä</span>
            </div>
            <div className="flex space-x-2">
              <button
                onClick={toggleEditMode}
                className={`px-4 py-2 border transition-all duration-200 text-sm font-medium ${
                  isEditing 
                    ? 'bg-yellow-400 text-black border-yellow-400' 
                    : 'bg-black text-white border-black hover:bg-yellow-400 hover:text-black'
                }`}
              >
                {isEditing ? '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}
              </button>
              {isEditing && (
                <button
                  onClick={saveTemplate}
                  className="px-4 py-2 bg-green-600 text-white hover:bg-green-700 transition-all duration-200 text-sm font-medium"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
              )}
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Controls */}
        <div className="mb-8">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-black mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
              <select
                value={selectedCategory}
                onChange={(e) => handleCategoryChange(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 text-black focus:outline-none focus:ring-2 focus:ring-yellow-400"
              >
                {categoryConfigs.map(category => (
                  <option key={category.id} value={category.id}>
                    {category.icon} {category.name}
                  </option>
                ))}
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-black mb-2">–®–∞–±–ª–æ–Ω</label>
              <select
                value={selectedTemplate}
                onChange={(e) => handleTemplateChange(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 text-black focus:outline-none focus:ring-2 focus:ring-yellow-400"
              >
                {currentCategory?.templates.map(template => (
                  <option key={template.id} value={template.id}>
                    {template.name}
                  </option>
                ))}
              </select>
            </div>
          </div>
        </div>

        {/* Template Info */}
        {currentTemplate && (
          <div className="mb-8 p-4 bg-gray-50 border border-black/10">
            <h2 className="text-lg font-semibold text-black mb-2">{currentTemplate.name}</h2>
            <p className="text-gray-600 text-sm">{currentTemplate.description}</p>
          </div>
        )}

        {/* Page Preview */}
        <div className="bg-white border border-black/10">
          <div className="px-6 py-4 border-b border-gray-200">
            <h2 className="text-lg font-semibold text-black">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã</h2>
          </div>
          
          <div 
            className="p-6"
            style={{
              display: 'grid',
              gridTemplateColumns: `repeat(${layout.columns}, 1fr)`,
              gap: `${layout.gap * 0.25}rem`
            }}
          >
            {components
              .filter(component => component.visible)
              .map((component) => (
                <div
                  key={component.id}
                  className={`bg-gray-50 border border-black/10 p-4 ${
                    isEditing ? 'hover:border-yellow-400 cursor-pointer' : ''
                  }`}
                  onClick={() => isEditing && console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', component.id)}
                  style={{
                    gridColumn: `span ${component.position.span || 1}`,
                    gridRow: component.position.row
                  }}
                >
                  <div className="flex items-center justify-between mb-2">
                    <h3 className="text-sm font-semibold text-black">
                      {component.title || component.type}
                    </h3>
                    {isEditing && (
                      <div className="flex items-center space-x-1">
                        <div className={`w-2 h-2 rounded-full ${component.visible ? 'bg-green-400' : 'bg-gray-400'}`}></div>
                        <span className="text-xs text-gray-500">
                          {component.visible ? '–í–∏–¥–∏–º—ã–π' : '–°–∫—Ä—ã—Ç—ã–π'}
                        </span>
                      </div>
                    )}
                  </div>
                  
                  <NoCodeComponentRenderer
                    type={component.type}
                    id={component.id}
                    config={component.config}
                    data={componentData[component.id]}
                    onUpdate={handleComponentUpdate}
                  />
                </div>
              ))}
          </div>
        </div>

        {/* Component Library */}
        {isEditing && (
          <div className="mt-8 bg-white border border-black/10">
            <div className="px-6 py-4 border-b border-gray-200">
              <h2 className="text-lg font-semibold text-black">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h2>
            </div>
            <div className="p-6">
              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
                {Object.keys(componentRegistry).map(type => (
                  <div
                    key={type}
                    className="p-4 border border-gray-200 hover:border-yellow-400 cursor-pointer transition-all duration-200"
                    onClick={() => console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', type)}
                  >
                    <div className="text-center">
                      <div className="text-2xl mb-2">üì¶</div>
                      <div className="text-sm font-medium text-black">{type}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}