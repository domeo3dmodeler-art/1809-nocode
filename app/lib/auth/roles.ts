// lib/auth/roles.ts
// –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Domeo No-Code

export type Role = 'admin' | 'complectator' | 'executor';

export type Permission = 
  | 'products.import'           // –ò–º–ø–æ—Ä—Ç –ø—Ä–∞–π—Å–æ–≤
  | 'products.manage'           // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏
  | 'products.photos'           // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ
  | 'categories.create'         // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  | 'categories.manage'         // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
  | 'catalog.view'              // –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞
  | 'catalog.search'            // –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
  | 'pricing.calculate'         // –†–∞—Å—á–µ—Ç —Ü–µ–Ω
  | 'quotes.create'             // –°–æ–∑–¥–∞–Ω–∏–µ –ö–ü
  | 'quotes.read'               // –ü—Ä–æ—Å–º–æ—Ç—Ä –ö–ü
  | 'quotes.update'             // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ö–ü
  | 'quotes.export'             // –≠–∫—Å–ø–æ—Ä—Ç –ö–ü
  | 'factory.order'             // –ó–∞–∫–∞–∑ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É
  | 'analytics.view'            // –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  | 'users.manage';             // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏

export type UserRole = {
  id: string;
  userId: string;
  role: Role;
  permissions: Permission[];
  createdAt: string;
  updatedAt: string;
};

export type RoleDefinition = {
  role: Role;
  name: string;
  description: string;
  permissions: Permission[];
  level: number; // –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (—á–µ–º –≤—ã—à–µ, —Ç–µ–º –±–æ–ª—å—à–µ –ø—Ä–∞–≤)
  color: string; // –¶–≤–µ—Ç –¥–ª—è UI
  icon: string;  // –ò–∫–æ–Ω–∫–∞ –¥–ª—è UI
};

class RoleService {
  private roleDefinitions: RoleDefinition[] = [
    {
      role: 'admin',
      name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      description: '–£–ø—Ä–∞–≤–ª—è–µ—Ç –±–∞–∑–æ–π —Ç–æ–≤–∞—Ä–æ–≤, –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ, —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
      permissions: [
        'products.import',
        'products.manage', 
        'products.photos',
        'categories.create',
        'categories.manage',
        'catalog.view',
        'catalog.search',
        'pricing.calculate',
        'quotes.create',
        'quotes.read',
        'quotes.update',
        'quotes.export',
        'analytics.view',
        'users.manage'
      ],
      level: 100,
      color: 'red',
      icon: 'üëë'
    },
    {
      role: 'complectator',
      name: '–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ç–æ—Ä',
      description: '–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫—Ä–æ–º–µ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É',
      permissions: [
        'catalog.view',
        'catalog.search',
        'pricing.calculate',
        'quotes.create',
        'quotes.read',
        'quotes.update',
        'quotes.export',
        'analytics.view'
      ],
      level: 80,
      color: 'blue',
      icon: 'üìã'
    },
    {
      role: 'executor',
      name: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞–∫–∞–∑–∞',
      description: '–í–∏–¥–∏—Ç –≤—Å–µ, –≤–∫–ª—é—á–∞—è –∑–∞–∫–∞–∑ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É',
      permissions: [
        'catalog.view',
        'catalog.search',
        'pricing.calculate',
        'quotes.create',
        'quotes.read',
        'quotes.update',
        'quotes.export',
        'factory.order',
        'analytics.view'
      ],
      level: 90,
      color: 'green',
      icon: '‚ö°'
    }
  ];

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ä–æ–ª–∏
  getAllRoles(): RoleDefinition[] {
    return [...this.roleDefinitions];
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª—å –ø–æ ID
  getRole(role: Role): RoleDefinition | null {
    return this.roleDefinitions.find(r => r.role === role) || null;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–æ–ª–∏
  getRolePermissions(role: Role): Permission[] {
    const roleDef = this.getRole(role);
    return roleDef ? roleDef.permissions : [];
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É —Ä–æ–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
  hasPermission(role: Role, permission: Permission): boolean {
    const permissions = this.getRolePermissions(role);
    return permissions.includes(permission);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–º–ø–æ—Ä—Ç—É —Ç–æ–≤–∞—Ä–æ–≤
  canImportProducts(role: Role): boolean {
    return this.hasPermission(role, 'products.import');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ç–æ–≤–∞—Ä–∞–º–∏
  canManageProducts(role: Role): boolean {
    return this.hasPermission(role, 'products.manage');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ
  canUploadPhotos(role: Role): boolean {
    return this.hasPermission(role, 'products.photos');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  canCreateCategories(role: Role): boolean {
    return this.hasPermission(role, 'categories.create');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
  canManageCategories(role: Role): boolean {
    return this.hasPermission(role, 'categories.manage');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞—Ç–∞–ª–æ–≥—É
  canViewCatalog(role: Role): boolean {
    return this.hasPermission(role, 'catalog.view');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–∏—Å–∫—É
  canSearchProducts(role: Role): boolean {
    return this.hasPermission(role, 'catalog.search');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—á–µ—Ç—É —Ü–µ–Ω
  canCalculatePricing(role: Role): boolean {
    return this.hasPermission(role, 'pricing.calculate');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ö–ü
  canManageQuotes(role: Role, action: 'create' | 'read' | 'update' | 'export'): boolean {
    const permission = `quotes.${action}` as Permission;
    return this.hasPermission(role, permission);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫–∞–∑—É –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É
  canCreateFactoryOrder(role: Role): boolean {
    return this.hasPermission(role, 'factory.order');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
  canViewAnalytics(role: Role): boolean {
    return this.hasPermission(role, 'analytics.view');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
  canManageUsers(role: Role): boolean {
    return this.hasPermission(role, 'users.manage');
  }

  // –ü–æ–ª—É—á–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ —Ä–æ–ª–∏
  getRoleLevel(role: Role): number {
    const roleDef = this.getRole(role);
    return roleDef ? roleDef.level : 0;
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ —Ä–æ–ª—å —É–ø—Ä–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–æ–π —Ä–æ–ª—å—é
  canManageRole(managerRole: Role, targetRole: Role): boolean {
    const managerLevel = this.getRoleLevel(managerRole);
    const targetLevel = this.getRoleLevel(targetRole);
    return managerLevel > targetLevel;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–º–∏ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å
  getManageableRoles(role: Role): Role[] {
    const roleLevel = this.getRoleLevel(role);
    return this.roleDefinitions
      .filter(r => r.level < roleLevel)
      .map(r => r.role);
  }

  // –ü–æ–ª—É—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Ä–æ–ª–∏
  getRoleRestrictions(role: Role): {
    maxQuotesPerDay?: number;
    canImportProducts: boolean;
    canUploadPhotos: boolean;
    canCreateCategories: boolean;
    canCreateFactoryOrders: boolean;
    canManageUsers: boolean;
  } {
    const restrictions = {
      maxQuotesPerDay: undefined as number | undefined,
      canImportProducts: false,
      canUploadPhotos: false,
      canCreateCategories: false,
      canCreateFactoryOrders: false,
      canManageUsers: false
    };

    switch (role) {
      case 'admin':
        restrictions.canImportProducts = true;
        restrictions.canUploadPhotos = true;
        restrictions.canCreateCategories = true;
        restrictions.canManageUsers = true;
        break;
      
      case 'complectator':
        restrictions.maxQuotesPerDay = 100;
        break;
      
      case 'executor':
        restrictions.canCreateFactoryOrders = true;
        restrictions.maxQuotesPerDay = 200;
        break;
    }

    return restrictions;
  }

  // –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Ä–æ–ª–∏ –¥–ª—è UI
  getRoleColor(role: Role): string {
    const roleDef = this.getRole(role);
    return roleDef ? roleDef.color : 'gray';
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É —Ä–æ–ª–∏ –¥–ª—è UI
  getRoleIcon(role: Role): string {
    const roleDef = this.getRole(role);
    return roleDef ? roleDef.icon : 'üë§';
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ
  canAccessAdmin(role: Role): boolean {
    return ['admin'].includes(role);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –∏–º–ø–æ—Ä—Ç–∞
  canAccessImport(role: Role): boolean {
    return this.hasPermission(role, 'products.import');
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
  canAccessMedia(role: Role): boolean {
    return this.hasPermission(role, 'products.photos');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton instance
export const roleService = new RoleService();
