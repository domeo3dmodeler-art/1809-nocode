// Prisma схема для универсальной системы товаров
// Подходит для Yandex Cloud PostgreSQL

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id             String   @id @db.VarChar(50)
  name           String   @db.VarChar(100)
  description    String?
  icon           String?  @db.VarChar(10)
  properties     Json     @default("[]")
  import_mapping Json     @default("{}")
  parent_id      String?  @db.VarChar(50)  // Для подкатегорий
  is_main        Boolean  @default(true)   // Основная категория или подкатегория
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  updated_at     DateTime @default(now()) @db.Timestamptz(6)

  // Связи
  products       Products[]
  import_history ImportHistory[]
  parent         Categories? @relation("CategoryHierarchy", fields: [parent_id], references: [id], onDelete: Cascade)
  subcategories  Categories[] @relation("CategoryHierarchy")

  @@map("categories")
}

model Products {
  id           Int      @id @default(autoincrement())
  category_id  String   @db.VarChar(50)
  supplier_sku String   @db.VarChar(100)
  data         Json     @default("{}")
  photo_url    String?
  created_at   DateTime @default(now()) @db.Timestamptz(6)
  updated_at   DateTime @default(now()) @db.Timestamptz(6)

  // Связи
  category     Categories @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@unique([category_id, supplier_sku])
  @@map("products")
}

model ImportHistory {
  id             Int      @id @default(autoincrement())
  category_id    String   @db.VarChar(50)
  filename       String   @db.VarChar(255)
  file_size      Int?
  imported_count Int      @default(0)
  error_count    Int      @default(0)
  status         String   @default("pending") @db.VarChar(20)
  errors         Json     @default("[]")
  created_at     DateTime @default(now()) @db.Timestamptz(6)

  // Связи
  category       Categories @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@map("import_history")
}