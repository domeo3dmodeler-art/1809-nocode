const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function findCategories() {
  try {
    console.log('üîç –ò—â–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
    
    // –ü–æ–ª—É—á–∏–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await prisma.catalogCategory.findMany({
      select: {
        id: true,
        name: true,
        is_active: true,
        products_count: true
      },
      orderBy: {
        name: 'asc'
      }
    });

    console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}\n`);

    if (categories.length === 0) {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    console.log('üìã –í–°–ï –ö–ê–¢–ï–ì–û–†–ò–ò:');
    console.log('='.repeat(60));

    categories.forEach((category, index) => {
      const status = category.is_active ? '‚úÖ' : '‚ùå';
      console.log(`${index + 1}. ${status} ${category.name} (ID: ${category.id})`);
      console.log(`   –¢–æ–≤–∞—Ä–æ–≤: ${category.products_count}`);
    });

    // –ò—â–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ —Å–ª–æ–≤–æ–º "–¥–≤–µ—Ä"
    console.log('\n' + '='.repeat(60));
    console.log('üö™ –ö–ê–¢–ï–ì–û–†–ò–ò –°–û –°–õ–û–í–û–ú "–î–í–ï–†":');
    console.log('='.repeat(60));

    const doorCategories = categories.filter(cat => 
      cat.name.toLowerCase().includes('–¥–≤–µ—Ä')
    );

    if (doorCategories.length > 0) {
      doorCategories.forEach((category, index) => {
        const status = category.is_active ? '‚úÖ' : '‚ùå';
        console.log(`${index + 1}. ${status} ${category.name} (ID: ${category.id})`);
      });
    } else {
      console.log('‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ —Å–ª–æ–≤–æ–º "–¥–≤–µ—Ä" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('\n' + '='.repeat(60));
    console.log('üì¶ –ö–û–õ–ò–ß–ï–°–¢–í–û –¢–û–í–ê–†–û–í –í –ö–ê–¢–ï–ì–û–†–ò–Ø–•:');
    console.log('='.repeat(60));

    for (const category of categories) {
      const productCount = await prisma.product.count({
        where: {
          catalog_category_id: category.id
        }
      });
      
      const status = category.is_active ? '‚úÖ' : '‚ùå';
      console.log(`${status} ${category.name}: ${productCount} —Ç–æ–≤–∞—Ä–æ–≤`);
    }

    console.log('\n‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
  } finally {
    await prisma.$disconnect();
  }
}

findCategories();
