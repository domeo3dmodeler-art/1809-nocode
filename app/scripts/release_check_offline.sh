#!/bin/bash
# scripts/release_check_offline.sh
# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É (–±–µ–∑ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞)

set -e

echo "üöÄ Release Check ‚Äî Domeo Doors Pilot (Offline)"
echo "============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_info() {
    echo -e "‚ÑπÔ∏è $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    log_error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É –ø–∏–ª–æ—Ç–∞ Doors (–æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º)..."

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
echo ""
log_info "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
if npm run build; then
    log_success "–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
    exit 1
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞
echo ""
log_info "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞..."
if npm run lint; then
    log_success "–õ–∏–Ω—Ç–µ—Ä –ø—Ä–æ—à–µ–ª –±–µ–∑ –æ—à–∏–±–æ–∫"
else
    log_warning "–õ–∏–Ω—Ç–µ—Ä –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤
echo ""
log_info "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤..."
if npx tsc --noEmit; then
    log_success "TypeScript —Ç–∏–ø—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
else
    log_error "–û—à–∏–±–∫–∏ –≤ TypeScript —Ç–∏–ø–∞—Ö"
    exit 1
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
echo ""
log_info "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."

CRITICAL_FILES=(
    "package.json"
    "next.config.mjs"
    "tsconfig.json"
    "prisma/schema.prisma"
    "app/not-found.tsx"
    "app/api/health/route.ts"
    "app/api/export/order/route.ts"
    "app/api/quotes/preview/route.ts"
    "docs/master_spec.md"
    "docs/roadmap.md"
    "docs/state.md"
)

for file in "${CRITICAL_FILES[@]}"; do
    if [ -f "$file" ]; then
        log_success "–§–∞–π–ª $file –Ω–∞–π–¥–µ–Ω"
    else
        log_error "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API
echo ""
log_info "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API..."

API_ROUTES=(
    "app/api/health/route.ts"
    "app/api/export/order/route.ts"
    "app/api/quotes/route.ts"
    "app/api/quotes/[id]/route.ts"
    "app/api/quotes/[id]/status/route.ts"
    "app/api/quotes/[id]/export/pdf/route.ts"
    "app/api/quotes/from-cart/route.ts"
    "app/api/quotes/preview/route.ts"
    "app/api/admin/import/[category]/route.ts"
    "app/api/admin/categories/route.ts"
)

for route in "${API_ROUTES[@]}"; do
    if [ -f "$route" ]; then
        log_success "API —Ä–æ—É—Ç $route –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "API —Ä–æ—É—Ç $route –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo ""
log_info "6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."

COMPONENTS=(
    "app/components/QuotesList.tsx"
    "app/components/CreateQuoteForm.tsx"
    "app/components/QuoteDetail.tsx"
    "app/components/AnalyticsDashboard.tsx"
    "app/doors/components/ExportButtons.tsx"
)

for component in "${COMPONENTS[@]}"; do
    if [ -f "$component" ]; then
        log_success "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç $component –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç $component –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏
echo ""
log_info "7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∫–∏..."

ADMIN_PAGES=(
    "app/admin/doors/page.tsx"
    "app/admin/doors/series/page.tsx"
    "app/admin/doors/series/new/page.tsx"
    "app/admin/doors/options/page.tsx"
    "app/admin/doors/constraints/page.tsx"
    "app/admin/doors/templates/page.tsx"
    "app/admin/import/page.tsx"
)

for page in "${ADMIN_PAGES[@]}"; do
    if [ -f "$page" ]; then
        log_success "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∫–∏ $page –Ω–∞–π–¥–µ–Ω–∞"
    else
        log_warning "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∫–∏ $page –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
done

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
echo ""
log_info "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤..."

TEST_FILES=(
    "app/__tests__/export.spec.ts"
    "app/__tests__/export-integration.spec.ts"
    "app/__tests__/admin-e2e.spec.ts"
    "app/__tests__/module-not-found.spec.ts"
    "app/__tests__/build-health.spec.ts"
)

for test in "${TEST_FILES[@]}"; do
    if [ -f "$test" ]; then
        log_success "–¢–µ—Å—Ç $test –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "–¢–µ—Å—Ç $test –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
echo ""
log_info "9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."

DOCS=(
    "docs/master_spec.md"
    "docs/roadmap.md"
    "docs/state.md"
    "docs/admin_guide.md"
    "docs/data_import_guide_doors.md"
    "docs/spec_kp_formulas.md"
    "docs/api_export_documentation.md"
    "docs/system_overview.md"
    "docs/m7-fix-readme.md"
)

for doc in "${DOCS[@]}"; do
    if [ -f "$doc" ]; then
        log_success "–î–æ–∫—É–º–µ–Ω—Ç $doc –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "–î–æ–∫—É–º–µ–Ω—Ç $doc –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
echo ""
log_info "10. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤..."

SCRIPTS=(
    "scripts/smoke.sh"
    "scripts/release_check.sh"
    "scripts/check_build_health.sh"
)

for script in "${SCRIPTS[@]}"; do
    if [ -f "$script" ]; then
        log_success "–°–∫—Ä–∏–ø—Ç $script –Ω–∞–π–¥–µ–Ω"
    else
        log_warning "–°–∫—Ä–∏–ø—Ç $script –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# 11. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
echo ""
log_info "11. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
if [ -f "app/openapi.yaml" ]; then
    log_success "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞"
    if npm run guard:openapi 2>/dev/null || echo "OpenAPI guard –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."; then
        log_success "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        log_warning "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã"
    fi
else
    log_warning "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# 12. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
log_info "12. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ
CRITICAL_CHECKS=0
TOTAL_CHECKS=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if npm run build >/dev/null 2>&1; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if npx tsc --noEmit >/dev/null 2>&1; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
MISSING_CRITICAL=0
for file in "package.json" "next.config.mjs" "tsconfig.json" "prisma/schema.prisma" "app/not-found.tsx"; do
    if [ ! -f "$file" ]; then
        MISSING_CRITICAL=$((MISSING_CRITICAL + 1))
    fi
done
if [ $MISSING_CRITICAL -eq 0 ]; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –†–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "============================================="
if [ "${CRITICAL_CHECKS}" -eq "${TOTAL_CHECKS}" ]; then
    log_success "üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò!"
    log_success "–ü–∏–ª–æ—Ç Doors –≥–æ—Ç–æ–≤ –∫ —Ä–µ–ª–∏–∑—É!"
    echo ""
    log_info "–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫: ${CRITICAL_CHECKS}/${TOTAL_CHECKS}"
    log_info "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É"
    echo ""
    log_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    log_info "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: npm run dev"
    log_info "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å API: curl http://localhost:3000/api/health"
    log_info "3. –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä"
    log_info "4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    log_info "5. –û–±—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo ""
    log_info "–î–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å API –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    log_info "bash scripts/release_check.sh"
    echo ""
    exit 0
else
    log_error "‚ùå –ù–ï –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò!"
    log_error "–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫: ${CRITICAL_CHECKS}/${TOTAL_CHECKS}"
    log_error "–°–∏—Å—Ç–µ–º–∞ –ù–ï –≥–æ—Ç–æ–≤–∞ –∫ —Ä–µ–ª–∏–∑—É"
    echo ""
    log_info "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–µ–ª–∏–∑–æ–º"
    exit 1
fi
