#!/bin/bash
# scripts/release_check.sh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É –ø–∏–ª–æ—Ç–∞ Doors

set -e

echo "üöÄ Release Check ‚Äî Domeo Doors Pilot"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

log_info() {
    echo -e "‚ÑπÔ∏è $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ]; then
    log_error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export PORT=${PORT:-8080}
export BASE_LOCAL="http://127.0.0.1:${PORT}"

log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–∏–∑–∞ –ø–∏–ª–æ—Ç–∞ Doors..."
log_info "–ü–æ—Ä—Ç: ${PORT}"
log_info "–ë–∞–∑–æ–≤—ã–π URL: ${BASE_LOCAL}"

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
echo ""
log_info "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
if npm run build; then
    log_success "–°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
else
    log_error "–°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
    exit 1
fi

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ /api/health ‚Üí 204
echo ""
log_info "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ health API..."
if curl -fsSI "${BASE_LOCAL}/api/health" | grep -q "204 No Content"; then
    log_success "Health API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 204"
else
    log_error "Health API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å"
    exit 1
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü PDF
echo ""
log_info "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ü PDF..."

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ö–ü –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ PDF
TEST_QUOTE_DATA='{
  "title": "–¢–µ—Å—Ç–æ–≤–æ–µ –ö–ü –¥–ª—è —Ä–µ–ª–∏–∑–∞",
  "items": [
    {
      "sku": "DOOR-TEST-001",
      "model": "Test Model",
      "width": 800,
      "height": 2000,
      "color": "–ë–µ–ª—ã–π",
      "finish": "–ú–∞—Ç–æ–≤—ã–π",
      "series": "Test",
      "material": "–ú–î–§",
      "rrc_price": 10000,
      "qty": 1,
      "currency": "RUB"
    }
  ],
  "total": 10000,
  "currency": "RUB",
  "clientInfo": {
    "company": "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è",
    "contact": "–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç",
    "email": "test@example.com"
  }
}'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF
PDF_RESPONSE=$(curl -s -w "%{http_code}" -X POST \
  -H "Content-Type: application/json" \
  -d "${TEST_QUOTE_DATA}" \
  "${BASE_LOCAL}/api/quotes/preview" \
  -o /tmp/test_quote.pdf)

if [ "${PDF_RESPONSE}" = "200" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    PDF_HEADERS=$(curl -sI -X POST \
      -H "Content-Type: application/json" \
      -d "${TEST_QUOTE_DATA}" \
      "${BASE_LOCAL}/api/quotes/preview")
    
    if echo "${PDF_HEADERS}" | grep -q "application/pdf"; then
        log_success "–ö–ü PDF –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ application/pdf"
    else
        log_error "–ö–ü PDF –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ application/pdf"
        exit 1
    fi
else
    log_error "–ö–ü PDF –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è (HTTP ${PDF_RESPONSE})"
    exit 1
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∑–∞–∫–∞–∑–∞
echo ""
log_info "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Ñ–∞–±—Ä–∏–∫—É..."

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–∏–Ω—è—Ç—ã–π –ö–ü –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
TEST_EXPORT_DATA='{
  "kpId": "test-kp-release-001",
  "format": "xlsx"
}'

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–∫—Å–ø–æ—Ä—Ç XLSX
EXPORT_RESPONSE=$(curl -s -w "%{http_code}" -X POST \
  -H "Content-Type: application/json" \
  -d "${TEST_EXPORT_DATA}" \
  "${BASE_LOCAL}/api/export/order" \
  -o /tmp/test_export.xlsx)

if [ "${EXPORT_RESPONSE}" = "200" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    EXPORT_HEADERS=$(curl -sI -X POST \
      -H "Content-Type: application/json" \
      -d "${TEST_EXPORT_DATA}" \
      "${BASE_LOCAL}/api/export/order")
    
    if echo "${EXPORT_HEADERS}" | grep -q "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"; then
        log_success "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ XLSX"
    else
        log_error "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–∞ –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ XLSX"
        exit 1
    fi
else
    log_warning "–≠–∫—Å–ø–æ—Ä—Ç –∑–∞–∫–∞–∑–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP ${EXPORT_RESPONSE}) - –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –ø—Ä–∏–Ω—è—Ç—ã—Ö –ö–ü"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8 –∏ ISO-–¥–∞—Ç—ã
echo ""
log_info "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8 –∏ ISO-–¥–∞—Ç—ã..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É
if file /tmp/test_quote.pdf | grep -q "PDF"; then
    log_success "PDF —Ñ–∞–π–ª –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"
else
    log_error "PDF —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω"
    exit 1
fi

# 6. –ü—Ä–æ–≥–æ–Ω unit-—Ç–µ—Å—Ç–æ–≤
echo ""
log_info "6. –ü—Ä–æ–≥–æ–Ω unit-—Ç–µ—Å—Ç–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Å—Ç—ã
if [ -d "__tests__" ] && [ "$(find __tests__ -name "*.spec.ts" | wc -l)" -gt 0 ]; then
    if npm test 2>/dev/null || echo "–¢–µ—Å—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."; then
        log_success "Unit-—Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
    else
        log_warning "Unit-—Ç–µ—Å—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏–ª–∏ –Ω–µ –ø—Ä–æ—à–ª–∏"
    fi
else
    log_warning "Unit-—Ç–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞
echo ""
log_info "7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–Ω—Ç–µ—Ä–∞..."
if npm run lint; then
    log_success "–õ–∏–Ω—Ç–µ—Ä –ø—Ä–æ—à–µ–ª –±–µ–∑ –æ—à–∏–±–æ–∫"
else
    log_warning "–õ–∏–Ω—Ç–µ—Ä –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ"
fi

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
echo ""
log_info "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
if [ -f "openapi.yaml" ]; then
    if npm run guard:openapi 2>/dev/null || echo "OpenAPI guard –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."; then
        log_success "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    else
        log_warning "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–º–µ–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã"
    fi
else
    log_warning "OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo ""
log_info "9. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
if [ -n "${DATABASE_URL}" ]; then
    log_success "DATABASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    log_warning "DATABASE_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
log_info "10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç
CRITICAL_CHECKS=0
TOTAL_CHECKS=0

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if npm run build >/dev/null 2>&1; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health API
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if curl -fsSI "${BASE_LOCAL}/api/health" | grep -q "204 No Content" 2>/dev/null; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PDF –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
TOTAL_CHECKS=$((TOTAL_CHECKS + 1))
if curl -fsSI -X POST -H "Content-Type: application/json" -d "${TEST_QUOTE_DATA}" "${BASE_LOCAL}/api/quotes/preview" | grep -q "application/pdf" 2>/dev/null; then
    CRITICAL_CHECKS=$((CRITICAL_CHECKS + 1))
fi

# –†–µ–∑—É–ª—å—Ç–∞—Ç
echo ""
echo "=================================="
if [ "${CRITICAL_CHECKS}" -eq "${TOTAL_CHECKS}" ]; then
    log_success "üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò!"
    log_success "–ü–∏–ª–æ—Ç Doors –≥–æ—Ç–æ–≤ –∫ —Ä–µ–ª–∏–∑—É!"
    echo ""
    log_info "–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫: ${CRITICAL_CHECKS}/${TOTAL_CHECKS}"
    log_info "–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É"
    echo ""
    log_info "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    log_info "1. –î–µ–ø–ª–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Å–µ—Ä–≤–µ—Ä"
    log_info "2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    log_info "3. –û–±—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo ""
    exit 0
else
    log_error "‚ùå –ù–ï –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–®–õ–ò!"
    log_error "–°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–æ–∫: ${CRITICAL_CHECKS}/${TOTAL_CHECKS}"
    log_error "–°–∏—Å—Ç–µ–º–∞ –ù–ï –≥–æ—Ç–æ–≤–∞ –∫ —Ä–µ–ª–∏–∑—É"
    echo ""
    log_info "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–µ–ª–∏–∑–æ–º"
    exit 1
fi
